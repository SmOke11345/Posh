generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  name     String
  lastname String
  gender   String
  email    String
  password String
  cart     Cart[]     @relation("CartUser")
  favorite Favorite[] @relation("FavoriteUser")
  review   Review[]   @relation("ReviewUser")
  order    Order[]    @relation("OrderUser")
}

model Catalog {
  id           Int        @id @default(autoincrement())
  title        String
  description  String[]
  sizes        String[]
  colors       String[]
  cost         Int
  type         String
  chapter      String
  gender       String
  status       String     @default("Новое")
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  images       String[]
  countProduct Int
  cart         Cart[]     @relation("CartCatalog")
  favorite     Favorite[] @relation("FavoriteCatalog")
  review       Review[]   @relation("ReviewCatalog")
  order        Order[]    @relation("OrderCatalog")
}

model Cart {
  id             Int      @id @default(autoincrement())
  user_id        Int
  catalog_id     Int
  size           String
  color          String
  chapterAndType String
  count          Int      @default(1)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  catalogId      Catalog  @relation("CartCatalog", fields: [catalog_id], references: [id])
  userId         User     @relation("CartUser", fields: [user_id], references: [id])
}

model Favorite {
  id         Int     @id @default(autoincrement())
  user_id    Int
  catalog_id Int
  userId     User    @relation("FavoriteUser", fields: [user_id], references: [id])
  catalogId  Catalog @relation("FavoriteCatalog", fields: [catalog_id], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  user_id    Int
  catalog_id Int
  text       String
  rating     Int
  userId     User     @relation("ReviewUser", fields: [user_id], references: [id])
  catalogId  Catalog  @relation("ReviewCatalog", fields: [catalog_id], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// TODO: Добавить модель Order

model Order {
  id         Int     @id @default(autoincrement())
  tel        String
  address    String
  user_id    Int
  userId     User    @relation("OrderUser", fields: [user_id], references: [id])
  catalog_id Int
  catalogId  Catalog @relation("OrderCatalog", fields: [catalog_id], references: [id])
}
